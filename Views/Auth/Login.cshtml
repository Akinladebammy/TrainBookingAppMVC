@model TrainBookingAppMVC.DTOs.RequestModel.AuthRequestModel

@{
    ViewData["Title"] = "Login";
    Layout = "_Layout";
}

<style>
    .login-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 400px;
        position: relative;
        overflow: hidden;
        margin: 0 auto;
        box-sizing: border-box;
    }

        .login-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

    .login-header {
        text-align: center;
        margin-bottom: 30px;
    }

        .login-header h1 {
            color: #333;
            font-size: 2.2em;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .login-header p {
            color: #666;
            font-size: 0.95em;
        }

    .success-message {
        background: linear-gradient(135deg, #4CAF50, #45a049);
        color: white;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        font-weight: 500;
        animation: slideIn 0.5s ease-out;
    }

    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
            font-size: 0.9em;
        }

    .form-control {
        width: 100%;
        padding: 15px 40px 15px 20px;
        border: 2px solid #e1e5e9;
        border-radius: 12px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: #f8f9fa;
        box-sizing: border-box;
    }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .form-control::placeholder {
            color: #999;
        }

    .btn-primary {
        width: 100%;
        padding: 15px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border: none;
        border-radius: 12px;
        color: white;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: 10px;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

    .validation-summary-errors {
        background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        animation: shake 0.5s ease-in-out;
    }

        .validation-summary-errors ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .validation-summary-errors li {
            margin-bottom: 5px;
            font-size: 0.9em;
        }

    .register-link {
        text-align: center;
        margin-top: 25px;
        padding-top: 25px;
        border-top: 1px solid #e1e5e9;
    }

        .register-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

            .register-link a:hover {
                color: #764ba2;
                text-decoration: underline;
            }

    .show-password-btn {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        cursor: pointer;
        color: #666;
        font-size: 14px;
        padding: 5px;
        transition: color 0.3s ease;
        z-index: 10;
    }

        .show-password-btn:hover {
            color: #667eea;
        }

    /* Override the layout background for this page */
    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        margin: 0;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    /* Center the container on the page, matching Register.cshtml */
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 80vh !important;
        padding: 2rem 1rem !important;
        flex-grow: 1;
        box-sizing: border-box;
    }

    .footer {
        position: fixed !important;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        z-index: 1000;
        background: linear-gradient(135deg, var(--text-dark), #555);
        border-top: 1px solid #e5e5e5;
        line-height: 20px;
        text-align: center;
        height: 20px;
    }
</style>

<div class="container">
    <div class="login-container">
        <div class="login-header">
            <h1>Welcome Back</h1>
            <p>Sign in to your account</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="success-message">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="validation-summary-errors">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form method="post" asp-action="Login" asp-controller="Auth">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="Username">Username</label>
                <input type="text"
                       class="form-control"
                       id="Username"
                       name="Username"
                       placeholder="Enter your username"
                       value="@Model?.Username"
                       required />
            </div>

            <div class="form-group">
                <label for="Password">Password</label>
                <div style="position: relative;">
                    <input type="password"
                           class="form-control"
                           id="Password"
                           name="Password"
                           placeholder="Enter your password"
                           required />
                    <button type="button" class="show-password-btn" onclick="togglePassword('Password')">Show</button>
                </div>
            </div>

            <button type="submit" class="btn-primary">
                Sign In
            </button>
        </form>

        <div class="register-link">
            <p>Don't have an account? <a href="@Url.Action("Register", "Auth")">Create one here</a></p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('.form-control');

            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.02)';
                });

                input.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });
            });

            const form = document.querySelector('form');
            const submitBtn = document.querySelector('.btn-primary');

            form.addEventListener('submit', function() {
                submitBtn.innerHTML = 'Signing In...';
                submitBtn.style.background = 'linear-gradient(135deg, #555, #777)';
            });

            function togglePassword(id) {
                const passwordInput = document.getElementById(id);
                const button = passwordInput.nextElementSibling;
                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    button.textContent = 'Hide';
                } else {
                    passwordInput.type = 'password';
                    button.textContent = 'Show';
                }
            }
            window.togglePassword = togglePassword;
        });
    </script>
}