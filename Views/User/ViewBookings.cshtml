@model TrainBookingAppMVC.DTOs.ResponseModel.BookingListResponseModel
@{
    ViewData["Title"] = "My Bookings";
    var timeZone = TimeZoneInfo.FindSystemTimeZoneById("W. Central Africa Standard Time"); // WAT (UTC+1)
}

<div class="container mt-5">
    <h1 class="mb-5 text-primary fw-bold display-4">My Bookings</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="col-md-10 offset-md-1">
        <div class="card shadow-lg border-0 large-card">
            <div class="card-body p-4">
                <h3 class="card-title text-secondary mb-4 fw-bold fs-2">Your Bookings</h3>
                <div class="d-flex gap-3 mb-4">
                    <a href="@Url.Action("Index", "User")" class="btn btn-outline-secondary btn-lg custom-btn">Back to Dashboard</a>
                </div>
                @if (Model.Bookings.Any())
                {
                    <table class="table table-bordered table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Train</th>
                                <th>Route</th>
                                <th>Departure</th>
                                <th>Ticket Class</th>
                                <th>Seats</th>
                                <th>Total Price (₦)</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in Model.Bookings)
                            {
                                <tr>
                                    <td>@booking.TrainName (@booking.TrainNumber)</td>
                                    <td>@booking.Source to @booking.Destination</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(booking.DepartureTime, timeZone).ToString("g")</td>
                                    <td>@booking.TicketClass</td>
                                    <td>@string.Join(", ", booking.SeatNumbers)</td>
                                    <td>@booking.TotalPrice.ToString("F2")</td>
                                    <td>@booking.TripStatus</td>
                                    <td>
                                        <a asp-action="BookingDetails" asp-route-id="@booking.Id" class="btn btn-info btn-sm custom-btn">Details</a>
                                        @if (!booking.IsCancelled && !booking.IsExpired && booking.DepartureTime > DateTime.UtcNow)
                                        {
                                            <form asp-action="CancelBooking" asp-route-id="@booking.Id" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-danger btn-sm custom-btn" onclick="return confirm('Are you sure you want to cancel this booking?');">Cancel</button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">No bookings found.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .custom-btn {
            transition: all 0.3s ease;
            border-radius: 8px;
            font-weight: bold;
        }

            .custom-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

        .large-card {
            border-radius: 12px;
            transition: all 0.3s ease;
            min-height: 400px;
        }

            .large-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

        .text-primary {
            color: #007bff !important;
            font-weight: bold;
        }

        .text-secondary {
            color: #6c757d !important;
            font-weight: bold;
        }

        .fs-2 {
            font-size: 2rem !important;
            font-weight: bold !important;
        }

        .btn-sm {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }

        .display-4 {
            font-weight: 700 !important;
        }

        .alert {
            font-weight: 500;
        }

        .table-bordered th, .table-bordered td {
            border: 1px solid #dee2e6;
            padding: 0.75rem;
        }

        .table-light {
            background-color: #f8f9fa;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const buttons = document.querySelectorAll('.custom-btn');
            buttons.forEach(btn => {
                btn.addEventListener('click', () => {
                    btn.style.opacity = '0.8';
                    setTimeout(() => btn.style.opacity = '1', 200);
                });
            });
        });
    </script>
}